
import java.util.Scanner;

// Name: Zhuoying Yi
// USC NetID: zhuoyiny
// CSCI455 PA2
// Fall 2017

/**
 * Test the function of BulgarianSolitaire.
 * It can be run in four different modes, each of these controlled by a command-line argument.
 */

public class BulgarianSolitaireSimulator {

   public static void main(String[] args) {
     
      boolean singleStep = false;
      boolean userConfig = false;

      for (int i = 0; i < args.length; i++) {
         if (args[i].equals("-u")) {
            userConfig = true;
         }
         else if (args[i].equals("-s")) {
            singleStep = true;
         }
      }
      SolitaireBoard.initialize();
      config(userConfig,singleStep);    		    
}
     
/**
 * To achieve the setting of four modes: user input, computer random generates, continuous or single-step execution.
 * @param userConfig
 * @param singleStep   
 */     
private static void config(boolean userConfig, boolean singleStep) {
    if ((userConfig == true)) {	     // userConfig == true, the number of cards in each pile are input by user
        Scanner in = new Scanner(System.in);
        String enter = in.nextLine();
        SolitaireBoard userInput = new SolitaireBoard(enter);
        
        while(!userInput.errorChecking(enter)) {   // To determine whether the input data is valid
            userInput.errorMessage();
            enter = in.nextLine();        	
        }    	
        System.out.print("Initial configuration: ");
        System.out.println(enter);
        userInput=new SolitaireBoard(enter);
        stepMode(userInput,singleStep);
    }
    else {             // userConfig == false, the number of cards in each pile are generated by Random function 
        System.out.print("Initial configuration: ");
        SolitaireBoard randonGenerate = new SolitaireBoard();
        stepMode(randonGenerate,singleStep);		   	
    }
}
   
   
/**
 * To achieve the setting of two modes: continuous or single-step execution.
 * @param solBoard
 * @param stepType
 */  
 private static void stepMode(SolitaireBoard solBoard,boolean stepType) {
     for(int i=1; !solBoard.isDone(); i++) {
         solBoard.playRound();
         System.out.println("[" + i + "] " + "Current configuration: " + solBoard.configString());
         if(stepType == true) {
             System.out.print("<Type return to continue>");
             Scanner in = new Scanner(System.in);
             in.nextLine();			 
         }		
     }
     System.out.println("Done!");
 }
      
}      
      
      
 
